servers = (
  {
    address = "localhost";
    chatnet = "zncadmin";
    port = "7700";
    password = "admin:password";
    #    use_ssl = "yes";
    #    ssl_verify = "no";
    cmd_queue_speed = "10ms";
    cmds_max_at_once = "512";
    autoconnect = "yes";
  },
  {
    address = "localhost";
    chatnet = "bitlbee";
    port = "7701";
    password = "bitlbee:password";
    #    use_ssl = "yes";
    #    ssl_verify = "no";
    autoconnect = "yes";
    cmd_queue_speed = "10ms";
    cmds_max_at_once = "512";
  },
  {
    address = "localhost";
    chatnet = "freenode";
    port = "7702";
    password = "freenode:password";
    #    use_ssl = "yes";
    #    ssl_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "localhost";
    chatnet = "oftc";
    port = "7703";
    password = "oftc:password";
    #    use_ssl = "yes";
    #    ssl_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "localhost";
    chatnet = "quakenet";
    port = "7704";
    password = "quakenet:password";
    #    use_ssl = "yes";
    #    ssl_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "localhost";
    chatnet = "undernet";
    port = "7705";
    password = "undernet:password";
    #    use_ssl = "yes";
    #    ssl_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "localhost";
    chatnet = "efnet";
    port = "7706";
    password = "efnet:password";
    #    use_ssl = "yes";
    #    ssl_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "localhost";
    chatnet = "snoonet";
    port = "7707";
    password = "snoonet:password";
    #    use_ssl = "yes";
    #    ssl_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  zncadmin = { type = "IRC"; cmdmax = "512"; cmdspeed = "10ms"; };
  bitlbee = { type = "IRC"; cmdmax = "512"; cmdspeed = "10ms"; };
  freenode = { type = "IRC"; };
  oftc = { 
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  quakenet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  undernet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  efnet = { type = "IRC"; };
  snoonet = { type = "IRC"; };
};

channels = ( );

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if command -v bc >/dev/null 2>&1\\; then printf '%s=' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  UNSET = "set -clear";
  RESET = "set -default";
  wl = "/window list";
  wm = "/window move";
  csop = "^msg chanserv op $C $N";
  xop = "^msg X op $C $N";
  deop = "^mode -o $N";
  quit = "echo D: don't try this at home D:";
  lod = "/me ಠ_ಠ";
  ft = "/me (╯°□°）╯︵ ┻━┻)";
  ra = "/msg -freenode redditalien ";
  db = "/msg -freenode diabot";
  dbs = "/msg -freenode diabot say #reddit-diabetes";
  dbd = "/msg -freenode diabot do #reddit-diabetes";
  uft = "/me ┬──┬ ノ( ゜-゜ノ)";
  dbf = "/msg -freenode diabot say #reddit-diabetes [flair]";
  cs = "msg chanserv";
  ns = "msg nickserv $-";
  znc = "msg *status $-";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        window_switcher = { };
        usercount = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_1 = {
      items = {
        barstart = { priority = "100"; };
        awl_1 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "awaxa";
    user_name = "awaxa";
    nick = "awaxa";
    hostname = "";
    log_timestamp = "%Y-%m-%d %H:%M:%S ";
    timestamp_format = "%H:%M:%S";
  };
  "fe-text" = {
    actlist_sort = "refnum";
    mirc_blink_fix = "yes";
    scrollback_time = "1day";
    scrollback_lines = "0";
    term_force_colors = "no";
  };
  "fe-common/core" = {
    theme = "thirdeye";
    bell_beeps = "yes";
    beep_msg_level = "MSGS DCC DCCMSGS HILIGHT";
    completion_char = ":";
    window_history = "yes";
    #    autolog = "yes";
    #    autolog_path = "/home/gkitson/.irssi/log/$tag/%Y/$0.%m.log";
    hilight_nick_matches = "no";
  };
  "perl/core/scripts" = {
    cowpath = "/usr/local/bin/cowsay";
    awl_display_key = "$Q%K|%n$H$C$S";
    awl_block = "10";
  };
  "irc/core" = { ban_type = "domain"; };
};

# http://pookey.co.uk/blog/archives/2-Irssi-making-it-beep-when-your-nick-is-mentioned.html
# /set bell_beeps ON
# /set beep_msg_level MSGS NOTICES DCC DCCMSGS HILIGHT 
# For the people using irssi from a screen, press CTRL+A CTRL+G the enable beeping.
hilights = (
  {
    #text = ".*greg.*";
    text = "greg";
    color = "%2%b";
    nick = "no";
    word = "yes";
    #regexp = "yes";
    regexp = "no";
  },
  {
    text = "awaxa";
    color = "%3%b";
    nick = "no";
    word = "yes";
    regexp = "no";
  }
);
ignores = ( );
logs = { };
keyboard = (
  { key = "meta-[M"; id = "command"; data = "mouse_xterm "; },
  { key = "^G"; id = "multi"; data = "erase_line;insert_text /ws "; },
  { key = "^R"; id = "command"; data = "history_search "; },
  { key = "meta-z"; id = "command"; data = "window last"; },
  { key = "meta-s"; id = "command"; data = "_spellcheck "; }
);
windows = {
  1 = { immortal = "yes"; name = "(status)"; level = "ALL"; };
  2 = { items = ( { type = "CHANNEL"; chat_type = "IRC"; name = "&bitlbee"; tag = "bitlbee"; }); };
  3 = { items = ( { type = "CHANNEL"; chat_type = "IRC"; name = "#reddit-diabetes"; tag = "freenode"; }); };
  5 = { items = ( { type = "CHANNEL"; chat_type = "IRC"; name = "#mco"; tag = "freenode"; }); };
  6 = { items = ( { type = "CHANNEL"; chat_type = "IRC"; name = "#awaxa"; tag = "freenode"; }); };
  7 = { items = ( { type = "CHANNEL"; chat_type = "IRC"; name = "#diabot"; tag = "freenode"; }); };
  8 = { items = ( { type = "CHANNEL"; chat_type = "IRC"; name = "#trystack"; tag = "freenode"; }); };
  9 = { items = ( { type = "QUERY"; chat_type = "IRC"; name = "diabot"; tag = "freenode"; }); };
  10 = { immortal = "yes"; name = "hilight"; sticky = "yes"; };
mainwindows = {
  14 = { first_line = "13"; lines = "56"; };
  10 = { first_line = "1"; lines = "12"; };
};
